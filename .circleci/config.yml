version: 2.1

jobs: # a basic unit of work in a run
  test: # your job name
    macos:
      xcode: 14.2.0 # version of Xcode
    steps:
      - checkout  # pull down code from
      - run:
          name: Run Unit Tests  # we must build the package's tests as an iOS exectuable, and output the profile data, then send that to sonar. Also, a kluge was required to get the apikey in place
          command: |-
            for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
            brew install sonar-scanner
            ./.circleci/getkey.sh
            xcodebuild -scheme w3w-swift-components test -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 11' -enableCodeCoverage YES -derivedDataPath .build
            PROFDATA_FILE=$(find . -name '*.profdata')
            xcrun llvm-cov show .build/Build/Products/Debug-iphonesimulator/w3w-swift-componentsTests.xctest/w3w-swift-componentsTests -instr-profile $PROFDATA_FILE > .build/cov.txt
            sonar-scanner -Dsonar.projectKey=what3words_w3w-swift-components -Dsonar.organization=what3words -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN -Dsonar.sources=Sources -Dsonar.swift.coverage.reportPath=.build/cov.txt
            cd Tests/TestProjectTextField
            xcodebuild -project TextField.xcodeproj -scheme TextField -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 11' PROD_API_KEY=$PROD_API_KEY test
            cd ../../Tests/TestProjectMap
            xcodebuild -project TestProjectMap.xcodeproj -scheme TestProjectMap -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 11' PROD_API_KEY=$PROD_API_KEY test
          
workflows:
  version: 2
  test_build:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
          context:
            - org-global
            - mobile
